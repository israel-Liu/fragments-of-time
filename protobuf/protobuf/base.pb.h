// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base.proto

#ifndef PROTOBUF_base_2eproto__INCLUDED
#define PROTOBUF_base_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tms {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_base_2eproto();
void protobuf_AssignDesc_base_2eproto();
void protobuf_ShutdownFile_base_2eproto();

class AnsInfo;
class TargetInfo;
class Targets;
class UTarget;
class MemberInfo;
class Member;
class MemberList;
class PrivateInfo;

enum OnlineState {
  OnlineState_Offline = 0,
  OnlineState_Online = 1
};
bool OnlineState_IsValid(int value);
const OnlineState OnlineState_MIN = OnlineState_Offline;
const OnlineState OnlineState_MAX = OnlineState_Online;
const int OnlineState_ARRAYSIZE = OnlineState_MAX + 1;

const ::google::protobuf::EnumDescriptor* OnlineState_descriptor();
inline const ::std::string& OnlineState_Name(OnlineState value) {
  return ::google::protobuf::internal::NameOfEnum(
    OnlineState_descriptor(), value);
}
inline bool OnlineState_Parse(
    const ::std::string& name, OnlineState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OnlineState>(
    OnlineState_descriptor(), name, value);
}
enum TargetType {
  TargetType_User = 0,
  TargetType_Group = 1
};
bool TargetType_IsValid(int value);
const TargetType TargetType_MIN = TargetType_User;
const TargetType TargetType_MAX = TargetType_Group;
const int TargetType_ARRAYSIZE = TargetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TargetType_descriptor();
inline const ::std::string& TargetType_Name(TargetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TargetType_descriptor(), value);
}
inline bool TargetType_Parse(
    const ::std::string& name, TargetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TargetType>(
    TargetType_descriptor(), name, value);
}
enum cmd {
  n_AnsInfo = 0,
  n_TalkMsg = 1,
  n_TalkMsgAns = 2,
  n_PullTalkMsgReq = 3,
  n_MsgInfoNotify = 11,
  n_TargetInfo = 34,
  n_FriendInfo = 35,
  n_UserTargets = 36,
  n_UserPrivateInfo = 37,
  n_UserInfo = 38,
  n_UserOnlineInfo = 39,
  n_LoginInfo = 40,
  n_RegisterInfo = 41,
  n_UserInfoReq = 42,
  n_TargetsQuery = 43,
  n_UpdateUserInfo = 44,
  n_TargetsAdd = 45,
  n_UpdateTargetInfo = 46,
  n_StateServerReq = 47,
  n_UserInfo_Old = 48,
  n_UTargetInfos = 49,
  n_SysTargetInfo = 50,
  n_SysTargetInfoList = 51,
  n_SysGroupInfo = 52,
  n_SysGroupInfoList = 53,
  n_SysUserInfo = 54,
  n_SysTalkMsg = 55,
  n_SysTalkMsgList = 56,
  n_SysTargetMsgInfo = 57,
  n_SysTargetMsgInfoList = 58,
  n_SysMemberInfo = 59,
  n_SysMemberInfoList = 60,
  n_SysGTalkInfoList = 61,
  n_SysUserPrivateInfo = 71,
  n_MemberList = 72,
  n_SysUserPrivateInfoList = 73,
  n_UserInfoNotify = 101,
  n_UserBaseInfoNotify = 102,
  n_TargetsAddNotify = 103,
  n_TargetsNotify = 104,
  n_UserOnlineNotify = 105,
  n_JoinGTalk = 110,
  n_AnsJoinGTalk = 111,
  n_QuitGTalk = 112,
  n_ReqHeartbeat = 1001,
  n_AnsHeartbeat = 1002,
  n_ServerTime = 1003,
  n_FileLoadData = 1007,
  n_FileLoadInfo = 1008,
  n_UserOnlineNotifyList = 1020,
  n_TalkMsgBaseList = 1021,
  n_ChatMsgBaseList = 1022,
  n_UserMsgIDList = 1023,
  n_ServerInfo = 1024,
  n_ServerInfoList = 1025,
  n_ServerOut = 1026,
  n_TargtServerIDList = 1027,
  n_UserLoginFlagList = 1028,
  n_TargetOnlineInfo = 1029,
  n_ChatUser = 1030
};
bool cmd_IsValid(int value);
const cmd cmd_MIN = n_AnsInfo;
const cmd cmd_MAX = n_ChatUser;
const int cmd_ARRAYSIZE = cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* cmd_descriptor();
inline const ::std::string& cmd_Name(cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    cmd_descriptor(), value);
}
inline bool cmd_Parse(
    const ::std::string& name, cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<cmd>(
    cmd_descriptor(), name, value);
}
// ===================================================================

class AnsInfo : public ::google::protobuf::Message {
 public:
  AnsInfo();
  virtual ~AnsInfo();

  AnsInfo(const AnsInfo& from);

  inline AnsInfo& operator=(const AnsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnsInfo& default_instance();

  void Swap(AnsInfo* other);

  // implements Message ----------------------------------------------

  AnsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnsInfo& from);
  void MergeFrom(const AnsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uError = 1;
  inline bool has_uerror() const;
  inline void clear_uerror();
  static const int kUErrorFieldNumber = 1;
  inline ::google::protobuf::uint32 uerror() const;
  inline void set_uerror(::google::protobuf::uint32 value);

  // required .tms.cmd tCmd = 2;
  inline bool has_tcmd() const;
  inline void clear_tcmd();
  static const int kTCmdFieldNumber = 2;
  inline ::tms::cmd tcmd() const;
  inline void set_tcmd(::tms::cmd value);

  // optional string strAccountNo = 3;
  inline bool has_straccountno() const;
  inline void clear_straccountno();
  static const int kStrAccountNoFieldNumber = 3;
  inline const ::std::string& straccountno() const;
  inline void set_straccountno(const ::std::string& value);
  inline void set_straccountno(const char* value);
  inline void set_straccountno(const char* value, size_t size);
  inline ::std::string* mutable_straccountno();
  inline ::std::string* release_straccountno();
  inline void set_allocated_straccountno(::std::string* straccountno);

  // required uint32 uAccountID = 4;
  inline bool has_uaccountid() const;
  inline void clear_uaccountid();
  static const int kUAccountIDFieldNumber = 4;
  inline ::google::protobuf::uint32 uaccountid() const;
  inline void set_uaccountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.AnsInfo)
 private:
  inline void set_has_uerror();
  inline void clear_has_uerror();
  inline void set_has_tcmd();
  inline void clear_has_tcmd();
  inline void set_has_straccountno();
  inline void clear_has_straccountno();
  inline void set_has_uaccountid();
  inline void clear_has_uaccountid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uerror_;
  int tcmd_;
  ::std::string* straccountno_;
  ::google::protobuf::uint32 uaccountid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_base_2eproto();
  friend void protobuf_AssignDesc_base_2eproto();
  friend void protobuf_ShutdownFile_base_2eproto();

  void InitAsDefaultInstance();
  static AnsInfo* default_instance_;
};
// -------------------------------------------------------------------

class TargetInfo : public ::google::protobuf::Message {
 public:
  TargetInfo();
  virtual ~TargetInfo();

  TargetInfo(const TargetInfo& from);

  inline TargetInfo& operator=(const TargetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetInfo& default_instance();

  void Swap(TargetInfo* other);

  // implements Message ----------------------------------------------

  TargetInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TargetInfo& from);
  void MergeFrom(const TargetInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strAccountNo = 1;
  inline bool has_straccountno() const;
  inline void clear_straccountno();
  static const int kStrAccountNoFieldNumber = 1;
  inline const ::std::string& straccountno() const;
  inline void set_straccountno(const ::std::string& value);
  inline void set_straccountno(const char* value);
  inline void set_straccountno(const char* value, size_t size);
  inline ::std::string* mutable_straccountno();
  inline ::std::string* release_straccountno();
  inline void set_allocated_straccountno(::std::string* straccountno);

  // required bytes strNickName = 2;
  inline bool has_strnickname() const;
  inline void clear_strnickname();
  static const int kStrNickNameFieldNumber = 2;
  inline const ::std::string& strnickname() const;
  inline void set_strnickname(const ::std::string& value);
  inline void set_strnickname(const char* value);
  inline void set_strnickname(const void* value, size_t size);
  inline ::std::string* mutable_strnickname();
  inline ::std::string* release_strnickname();
  inline void set_allocated_strnickname(::std::string* strnickname);

  // required uint32 nFace = 3 [default = 0];
  inline bool has_nface() const;
  inline void clear_nface();
  static const int kNFaceFieldNumber = 3;
  inline ::google::protobuf::uint32 nface() const;
  inline void set_nface(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:tms.TargetInfo)
 private:
  inline void set_has_straccountno();
  inline void clear_has_straccountno();
  inline void set_has_strnickname();
  inline void clear_has_strnickname();
  inline void set_has_nface();
  inline void clear_has_nface();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* straccountno_;
  ::std::string* strnickname_;
  ::google::protobuf::uint32 nface_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_base_2eproto();
  friend void protobuf_AssignDesc_base_2eproto();
  friend void protobuf_ShutdownFile_base_2eproto();

  void InitAsDefaultInstance();
  static TargetInfo* default_instance_;
};
// -------------------------------------------------------------------

class Targets : public ::google::protobuf::Message {
 public:
  Targets();
  virtual ~Targets();

  Targets(const Targets& from);

  inline Targets& operator=(const Targets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Targets& default_instance();

  void Swap(Targets* other);

  // implements Message ----------------------------------------------

  Targets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Targets& from);
  void MergeFrom(const Targets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uTargetID = 1 [default = 0];
  inline bool has_utargetid() const;
  inline void clear_utargetid();
  static const int kUTargetIDFieldNumber = 1;
  inline ::google::protobuf::uint32 utargetid() const;
  inline void set_utargetid(::google::protobuf::uint32 value);

  // required .tms.TargetInfo TargetInfos = 2;
  inline bool has_targetinfos() const;
  inline void clear_targetinfos();
  static const int kTargetInfosFieldNumber = 2;
  inline const ::tms::TargetInfo& targetinfos() const;
  inline ::tms::TargetInfo* mutable_targetinfos();
  inline ::tms::TargetInfo* release_targetinfos();
  inline void set_allocated_targetinfos(::tms::TargetInfo* targetinfos);

  // @@protoc_insertion_point(class_scope:tms.Targets)
 private:
  inline void set_has_utargetid();
  inline void clear_has_utargetid();
  inline void set_has_targetinfos();
  inline void clear_has_targetinfos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::tms::TargetInfo* targetinfos_;
  ::google::protobuf::uint32 utargetid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_base_2eproto();
  friend void protobuf_AssignDesc_base_2eproto();
  friend void protobuf_ShutdownFile_base_2eproto();

  void InitAsDefaultInstance();
  static Targets* default_instance_;
};
// -------------------------------------------------------------------

class UTarget : public ::google::protobuf::Message {
 public:
  UTarget();
  virtual ~UTarget();

  UTarget(const UTarget& from);

  inline UTarget& operator=(const UTarget& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UTarget& default_instance();

  void Swap(UTarget* other);

  // implements Message ----------------------------------------------

  UTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UTarget& from);
  void MergeFrom(const UTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uTargetID = 1 [default = 0];
  inline bool has_utargetid() const;
  inline void clear_utargetid();
  static const int kUTargetIDFieldNumber = 1;
  inline ::google::protobuf::uint32 utargetid() const;
  inline void set_utargetid(::google::protobuf::uint32 value);

  // optional uint32 uRight = 2 [default = 0];
  inline bool has_uright() const;
  inline void clear_uright();
  static const int kURightFieldNumber = 2;
  inline ::google::protobuf::uint32 uright() const;
  inline void set_uright(::google::protobuf::uint32 value);

  // optional bytes selfparam = 3;
  inline bool has_selfparam() const;
  inline void clear_selfparam();
  static const int kSelfparamFieldNumber = 3;
  inline const ::std::string& selfparam() const;
  inline void set_selfparam(const ::std::string& value);
  inline void set_selfparam(const char* value);
  inline void set_selfparam(const void* value, size_t size);
  inline ::std::string* mutable_selfparam();
  inline ::std::string* release_selfparam();
  inline void set_allocated_selfparam(::std::string* selfparam);

  // @@protoc_insertion_point(class_scope:tms.UTarget)
 private:
  inline void set_has_utargetid();
  inline void clear_has_utargetid();
  inline void set_has_uright();
  inline void clear_has_uright();
  inline void set_has_selfparam();
  inline void clear_has_selfparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 utargetid_;
  ::google::protobuf::uint32 uright_;
  ::std::string* selfparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_base_2eproto();
  friend void protobuf_AssignDesc_base_2eproto();
  friend void protobuf_ShutdownFile_base_2eproto();

  void InitAsDefaultInstance();
  static UTarget* default_instance_;
};
// -------------------------------------------------------------------

class MemberInfo : public ::google::protobuf::Message {
 public:
  MemberInfo();
  virtual ~MemberInfo();

  MemberInfo(const MemberInfo& from);

  inline MemberInfo& operator=(const MemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberInfo& default_instance();

  void Swap(MemberInfo* other);

  // implements Message ----------------------------------------------

  MemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberInfo& from);
  void MergeFrom(const MemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uRight = 2 [default = 0];
  inline bool has_uright() const;
  inline void clear_uright();
  static const int kURightFieldNumber = 2;
  inline ::google::protobuf::uint32 uright() const;
  inline void set_uright(::google::protobuf::uint32 value);

  // optional bytes selfparam = 3;
  inline bool has_selfparam() const;
  inline void clear_selfparam();
  static const int kSelfparamFieldNumber = 3;
  inline const ::std::string& selfparam() const;
  inline void set_selfparam(const ::std::string& value);
  inline void set_selfparam(const char* value);
  inline void set_selfparam(const void* value, size_t size);
  inline ::std::string* mutable_selfparam();
  inline ::std::string* release_selfparam();
  inline void set_allocated_selfparam(::std::string* selfparam);

  // @@protoc_insertion_point(class_scope:tms.MemberInfo)
 private:
  inline void set_has_uright();
  inline void clear_has_uright();
  inline void set_has_selfparam();
  inline void clear_has_selfparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* selfparam_;
  ::google::protobuf::uint32 uright_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_base_2eproto();
  friend void protobuf_AssignDesc_base_2eproto();
  friend void protobuf_ShutdownFile_base_2eproto();

  void InitAsDefaultInstance();
  static MemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class Member : public ::google::protobuf::Message {
 public:
  Member();
  virtual ~Member();

  Member(const Member& from);

  inline Member& operator=(const Member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Member& default_instance();

  void Swap(Member* other);

  // implements Message ----------------------------------------------

  Member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Member& from);
  void MergeFrom(const Member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uTargetID = 1 [default = 0];
  inline bool has_utargetid() const;
  inline void clear_utargetid();
  static const int kUTargetIDFieldNumber = 1;
  inline ::google::protobuf::uint32 utargetid() const;
  inline void set_utargetid(::google::protobuf::uint32 value);

  // optional .tms.MemberInfo MemberInfos = 2;
  inline bool has_memberinfos() const;
  inline void clear_memberinfos();
  static const int kMemberInfosFieldNumber = 2;
  inline const ::tms::MemberInfo& memberinfos() const;
  inline ::tms::MemberInfo* mutable_memberinfos();
  inline ::tms::MemberInfo* release_memberinfos();
  inline void set_allocated_memberinfos(::tms::MemberInfo* memberinfos);

  // @@protoc_insertion_point(class_scope:tms.Member)
 private:
  inline void set_has_utargetid();
  inline void clear_has_utargetid();
  inline void set_has_memberinfos();
  inline void clear_has_memberinfos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::tms::MemberInfo* memberinfos_;
  ::google::protobuf::uint32 utargetid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_base_2eproto();
  friend void protobuf_AssignDesc_base_2eproto();
  friend void protobuf_ShutdownFile_base_2eproto();

  void InitAsDefaultInstance();
  static Member* default_instance_;
};
// -------------------------------------------------------------------

class MemberList : public ::google::protobuf::Message {
 public:
  MemberList();
  virtual ~MemberList();

  MemberList(const MemberList& from);

  inline MemberList& operator=(const MemberList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemberList& default_instance();

  void Swap(MemberList* other);

  // implements Message ----------------------------------------------

  MemberList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemberList& from);
  void MergeFrom(const MemberList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uVersion = 1 [default = 0];
  inline bool has_uversion() const;
  inline void clear_uversion();
  static const int kUVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 uversion() const;
  inline void set_uversion(::google::protobuf::uint32 value);

  // repeated .tms.Member Members = 2;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 2;
  inline const ::tms::Member& members(int index) const;
  inline ::tms::Member* mutable_members(int index);
  inline ::tms::Member* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::tms::Member >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::tms::Member >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:tms.MemberList)
 private:
  inline void set_has_uversion();
  inline void clear_has_uversion();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::tms::Member > members_;
  ::google::protobuf::uint32 uversion_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_base_2eproto();
  friend void protobuf_AssignDesc_base_2eproto();
  friend void protobuf_ShutdownFile_base_2eproto();

  void InitAsDefaultInstance();
  static MemberList* default_instance_;
};
// -------------------------------------------------------------------

class PrivateInfo : public ::google::protobuf::Message {
 public:
  PrivateInfo();
  virtual ~PrivateInfo();

  PrivateInfo(const PrivateInfo& from);

  inline PrivateInfo& operator=(const PrivateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrivateInfo& default_instance();

  void Swap(PrivateInfo* other);

  // implements Message ----------------------------------------------

  PrivateInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrivateInfo& from);
  void MergeFrom(const PrivateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes selfparam = 1;
  inline bool has_selfparam() const;
  inline void clear_selfparam();
  static const int kSelfparamFieldNumber = 1;
  inline const ::std::string& selfparam() const;
  inline void set_selfparam(const ::std::string& value);
  inline void set_selfparam(const char* value);
  inline void set_selfparam(const void* value, size_t size);
  inline ::std::string* mutable_selfparam();
  inline ::std::string* release_selfparam();
  inline void set_allocated_selfparam(::std::string* selfparam);

  // @@protoc_insertion_point(class_scope:tms.PrivateInfo)
 private:
  inline void set_has_selfparam();
  inline void clear_has_selfparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* selfparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_base_2eproto();
  friend void protobuf_AssignDesc_base_2eproto();
  friend void protobuf_ShutdownFile_base_2eproto();

  void InitAsDefaultInstance();
  static PrivateInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// AnsInfo

// required uint32 uError = 1;
inline bool AnsInfo::has_uerror() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnsInfo::set_has_uerror() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnsInfo::clear_has_uerror() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnsInfo::clear_uerror() {
  uerror_ = 0u;
  clear_has_uerror();
}
inline ::google::protobuf::uint32 AnsInfo::uerror() const {
  return uerror_;
}
inline void AnsInfo::set_uerror(::google::protobuf::uint32 value) {
  set_has_uerror();
  uerror_ = value;
}

// required .tms.cmd tCmd = 2;
inline bool AnsInfo::has_tcmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnsInfo::set_has_tcmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnsInfo::clear_has_tcmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnsInfo::clear_tcmd() {
  tcmd_ = 0;
  clear_has_tcmd();
}
inline ::tms::cmd AnsInfo::tcmd() const {
  return static_cast< ::tms::cmd >(tcmd_);
}
inline void AnsInfo::set_tcmd(::tms::cmd value) {
  assert(::tms::cmd_IsValid(value));
  set_has_tcmd();
  tcmd_ = value;
}

// optional string strAccountNo = 3;
inline bool AnsInfo::has_straccountno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnsInfo::set_has_straccountno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnsInfo::clear_has_straccountno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnsInfo::clear_straccountno() {
  if (straccountno_ != &::google::protobuf::internal::kEmptyString) {
    straccountno_->clear();
  }
  clear_has_straccountno();
}
inline const ::std::string& AnsInfo::straccountno() const {
  return *straccountno_;
}
inline void AnsInfo::set_straccountno(const ::std::string& value) {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  straccountno_->assign(value);
}
inline void AnsInfo::set_straccountno(const char* value) {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  straccountno_->assign(value);
}
inline void AnsInfo::set_straccountno(const char* value, size_t size) {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  straccountno_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AnsInfo::mutable_straccountno() {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  return straccountno_;
}
inline ::std::string* AnsInfo::release_straccountno() {
  clear_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straccountno_;
    straccountno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AnsInfo::set_allocated_straccountno(::std::string* straccountno) {
  if (straccountno_ != &::google::protobuf::internal::kEmptyString) {
    delete straccountno_;
  }
  if (straccountno) {
    set_has_straccountno();
    straccountno_ = straccountno;
  } else {
    clear_has_straccountno();
    straccountno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 uAccountID = 4;
inline bool AnsInfo::has_uaccountid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnsInfo::set_has_uaccountid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnsInfo::clear_has_uaccountid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnsInfo::clear_uaccountid() {
  uaccountid_ = 0u;
  clear_has_uaccountid();
}
inline ::google::protobuf::uint32 AnsInfo::uaccountid() const {
  return uaccountid_;
}
inline void AnsInfo::set_uaccountid(::google::protobuf::uint32 value) {
  set_has_uaccountid();
  uaccountid_ = value;
}

// -------------------------------------------------------------------

// TargetInfo

// required string strAccountNo = 1;
inline bool TargetInfo::has_straccountno() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TargetInfo::set_has_straccountno() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TargetInfo::clear_has_straccountno() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TargetInfo::clear_straccountno() {
  if (straccountno_ != &::google::protobuf::internal::kEmptyString) {
    straccountno_->clear();
  }
  clear_has_straccountno();
}
inline const ::std::string& TargetInfo::straccountno() const {
  return *straccountno_;
}
inline void TargetInfo::set_straccountno(const ::std::string& value) {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  straccountno_->assign(value);
}
inline void TargetInfo::set_straccountno(const char* value) {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  straccountno_->assign(value);
}
inline void TargetInfo::set_straccountno(const char* value, size_t size) {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  straccountno_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TargetInfo::mutable_straccountno() {
  set_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    straccountno_ = new ::std::string;
  }
  return straccountno_;
}
inline ::std::string* TargetInfo::release_straccountno() {
  clear_has_straccountno();
  if (straccountno_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straccountno_;
    straccountno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TargetInfo::set_allocated_straccountno(::std::string* straccountno) {
  if (straccountno_ != &::google::protobuf::internal::kEmptyString) {
    delete straccountno_;
  }
  if (straccountno) {
    set_has_straccountno();
    straccountno_ = straccountno;
  } else {
    clear_has_straccountno();
    straccountno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes strNickName = 2;
inline bool TargetInfo::has_strnickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TargetInfo::set_has_strnickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TargetInfo::clear_has_strnickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TargetInfo::clear_strnickname() {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    strnickname_->clear();
  }
  clear_has_strnickname();
}
inline const ::std::string& TargetInfo::strnickname() const {
  return *strnickname_;
}
inline void TargetInfo::set_strnickname(const ::std::string& value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void TargetInfo::set_strnickname(const char* value) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(value);
}
inline void TargetInfo::set_strnickname(const void* value, size_t size) {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  strnickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TargetInfo::mutable_strnickname() {
  set_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    strnickname_ = new ::std::string;
  }
  return strnickname_;
}
inline ::std::string* TargetInfo::release_strnickname() {
  clear_has_strnickname();
  if (strnickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnickname_;
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TargetInfo::set_allocated_strnickname(::std::string* strnickname) {
  if (strnickname_ != &::google::protobuf::internal::kEmptyString) {
    delete strnickname_;
  }
  if (strnickname) {
    set_has_strnickname();
    strnickname_ = strnickname;
  } else {
    clear_has_strnickname();
    strnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 nFace = 3 [default = 0];
inline bool TargetInfo::has_nface() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TargetInfo::set_has_nface() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TargetInfo::clear_has_nface() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TargetInfo::clear_nface() {
  nface_ = 0u;
  clear_has_nface();
}
inline ::google::protobuf::uint32 TargetInfo::nface() const {
  return nface_;
}
inline void TargetInfo::set_nface(::google::protobuf::uint32 value) {
  set_has_nface();
  nface_ = value;
}

// -------------------------------------------------------------------

// Targets

// required uint32 uTargetID = 1 [default = 0];
inline bool Targets::has_utargetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Targets::set_has_utargetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Targets::clear_has_utargetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Targets::clear_utargetid() {
  utargetid_ = 0u;
  clear_has_utargetid();
}
inline ::google::protobuf::uint32 Targets::utargetid() const {
  return utargetid_;
}
inline void Targets::set_utargetid(::google::protobuf::uint32 value) {
  set_has_utargetid();
  utargetid_ = value;
}

// required .tms.TargetInfo TargetInfos = 2;
inline bool Targets::has_targetinfos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Targets::set_has_targetinfos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Targets::clear_has_targetinfos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Targets::clear_targetinfos() {
  if (targetinfos_ != NULL) targetinfos_->::tms::TargetInfo::Clear();
  clear_has_targetinfos();
}
inline const ::tms::TargetInfo& Targets::targetinfos() const {
  return targetinfos_ != NULL ? *targetinfos_ : *default_instance_->targetinfos_;
}
inline ::tms::TargetInfo* Targets::mutable_targetinfos() {
  set_has_targetinfos();
  if (targetinfos_ == NULL) targetinfos_ = new ::tms::TargetInfo;
  return targetinfos_;
}
inline ::tms::TargetInfo* Targets::release_targetinfos() {
  clear_has_targetinfos();
  ::tms::TargetInfo* temp = targetinfos_;
  targetinfos_ = NULL;
  return temp;
}
inline void Targets::set_allocated_targetinfos(::tms::TargetInfo* targetinfos) {
  delete targetinfos_;
  targetinfos_ = targetinfos;
  if (targetinfos) {
    set_has_targetinfos();
  } else {
    clear_has_targetinfos();
  }
}

// -------------------------------------------------------------------

// UTarget

// required uint32 uTargetID = 1 [default = 0];
inline bool UTarget::has_utargetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UTarget::set_has_utargetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UTarget::clear_has_utargetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UTarget::clear_utargetid() {
  utargetid_ = 0u;
  clear_has_utargetid();
}
inline ::google::protobuf::uint32 UTarget::utargetid() const {
  return utargetid_;
}
inline void UTarget::set_utargetid(::google::protobuf::uint32 value) {
  set_has_utargetid();
  utargetid_ = value;
}

// optional uint32 uRight = 2 [default = 0];
inline bool UTarget::has_uright() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UTarget::set_has_uright() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UTarget::clear_has_uright() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UTarget::clear_uright() {
  uright_ = 0u;
  clear_has_uright();
}
inline ::google::protobuf::uint32 UTarget::uright() const {
  return uright_;
}
inline void UTarget::set_uright(::google::protobuf::uint32 value) {
  set_has_uright();
  uright_ = value;
}

// optional bytes selfparam = 3;
inline bool UTarget::has_selfparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UTarget::set_has_selfparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UTarget::clear_has_selfparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UTarget::clear_selfparam() {
  if (selfparam_ != &::google::protobuf::internal::kEmptyString) {
    selfparam_->clear();
  }
  clear_has_selfparam();
}
inline const ::std::string& UTarget::selfparam() const {
  return *selfparam_;
}
inline void UTarget::set_selfparam(const ::std::string& value) {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  selfparam_->assign(value);
}
inline void UTarget::set_selfparam(const char* value) {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  selfparam_->assign(value);
}
inline void UTarget::set_selfparam(const void* value, size_t size) {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  selfparam_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UTarget::mutable_selfparam() {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  return selfparam_;
}
inline ::std::string* UTarget::release_selfparam() {
  clear_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = selfparam_;
    selfparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UTarget::set_allocated_selfparam(::std::string* selfparam) {
  if (selfparam_ != &::google::protobuf::internal::kEmptyString) {
    delete selfparam_;
  }
  if (selfparam) {
    set_has_selfparam();
    selfparam_ = selfparam;
  } else {
    clear_has_selfparam();
    selfparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MemberInfo

// optional uint32 uRight = 2 [default = 0];
inline bool MemberInfo::has_uright() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberInfo::set_has_uright() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberInfo::clear_has_uright() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberInfo::clear_uright() {
  uright_ = 0u;
  clear_has_uright();
}
inline ::google::protobuf::uint32 MemberInfo::uright() const {
  return uright_;
}
inline void MemberInfo::set_uright(::google::protobuf::uint32 value) {
  set_has_uright();
  uright_ = value;
}

// optional bytes selfparam = 3;
inline bool MemberInfo::has_selfparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemberInfo::set_has_selfparam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemberInfo::clear_has_selfparam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemberInfo::clear_selfparam() {
  if (selfparam_ != &::google::protobuf::internal::kEmptyString) {
    selfparam_->clear();
  }
  clear_has_selfparam();
}
inline const ::std::string& MemberInfo::selfparam() const {
  return *selfparam_;
}
inline void MemberInfo::set_selfparam(const ::std::string& value) {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  selfparam_->assign(value);
}
inline void MemberInfo::set_selfparam(const char* value) {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  selfparam_->assign(value);
}
inline void MemberInfo::set_selfparam(const void* value, size_t size) {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  selfparam_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MemberInfo::mutable_selfparam() {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  return selfparam_;
}
inline ::std::string* MemberInfo::release_selfparam() {
  clear_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = selfparam_;
    selfparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MemberInfo::set_allocated_selfparam(::std::string* selfparam) {
  if (selfparam_ != &::google::protobuf::internal::kEmptyString) {
    delete selfparam_;
  }
  if (selfparam) {
    set_has_selfparam();
    selfparam_ = selfparam;
  } else {
    clear_has_selfparam();
    selfparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Member

// required uint32 uTargetID = 1 [default = 0];
inline bool Member::has_utargetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Member::set_has_utargetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Member::clear_has_utargetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Member::clear_utargetid() {
  utargetid_ = 0u;
  clear_has_utargetid();
}
inline ::google::protobuf::uint32 Member::utargetid() const {
  return utargetid_;
}
inline void Member::set_utargetid(::google::protobuf::uint32 value) {
  set_has_utargetid();
  utargetid_ = value;
}

// optional .tms.MemberInfo MemberInfos = 2;
inline bool Member::has_memberinfos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Member::set_has_memberinfos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Member::clear_has_memberinfos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Member::clear_memberinfos() {
  if (memberinfos_ != NULL) memberinfos_->::tms::MemberInfo::Clear();
  clear_has_memberinfos();
}
inline const ::tms::MemberInfo& Member::memberinfos() const {
  return memberinfos_ != NULL ? *memberinfos_ : *default_instance_->memberinfos_;
}
inline ::tms::MemberInfo* Member::mutable_memberinfos() {
  set_has_memberinfos();
  if (memberinfos_ == NULL) memberinfos_ = new ::tms::MemberInfo;
  return memberinfos_;
}
inline ::tms::MemberInfo* Member::release_memberinfos() {
  clear_has_memberinfos();
  ::tms::MemberInfo* temp = memberinfos_;
  memberinfos_ = NULL;
  return temp;
}
inline void Member::set_allocated_memberinfos(::tms::MemberInfo* memberinfos) {
  delete memberinfos_;
  memberinfos_ = memberinfos;
  if (memberinfos) {
    set_has_memberinfos();
  } else {
    clear_has_memberinfos();
  }
}

// -------------------------------------------------------------------

// MemberList

// required uint32 uVersion = 1 [default = 0];
inline bool MemberList::has_uversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemberList::set_has_uversion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemberList::clear_has_uversion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemberList::clear_uversion() {
  uversion_ = 0u;
  clear_has_uversion();
}
inline ::google::protobuf::uint32 MemberList::uversion() const {
  return uversion_;
}
inline void MemberList::set_uversion(::google::protobuf::uint32 value) {
  set_has_uversion();
  uversion_ = value;
}

// repeated .tms.Member Members = 2;
inline int MemberList::members_size() const {
  return members_.size();
}
inline void MemberList::clear_members() {
  members_.Clear();
}
inline const ::tms::Member& MemberList::members(int index) const {
  return members_.Get(index);
}
inline ::tms::Member* MemberList::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::tms::Member* MemberList::add_members() {
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tms::Member >&
MemberList::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::tms::Member >*
MemberList::mutable_members() {
  return &members_;
}

// -------------------------------------------------------------------

// PrivateInfo

// optional bytes selfparam = 1;
inline bool PrivateInfo::has_selfparam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrivateInfo::set_has_selfparam() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrivateInfo::clear_has_selfparam() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrivateInfo::clear_selfparam() {
  if (selfparam_ != &::google::protobuf::internal::kEmptyString) {
    selfparam_->clear();
  }
  clear_has_selfparam();
}
inline const ::std::string& PrivateInfo::selfparam() const {
  return *selfparam_;
}
inline void PrivateInfo::set_selfparam(const ::std::string& value) {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  selfparam_->assign(value);
}
inline void PrivateInfo::set_selfparam(const char* value) {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  selfparam_->assign(value);
}
inline void PrivateInfo::set_selfparam(const void* value, size_t size) {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  selfparam_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PrivateInfo::mutable_selfparam() {
  set_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    selfparam_ = new ::std::string;
  }
  return selfparam_;
}
inline ::std::string* PrivateInfo::release_selfparam() {
  clear_has_selfparam();
  if (selfparam_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = selfparam_;
    selfparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PrivateInfo::set_allocated_selfparam(::std::string* selfparam) {
  if (selfparam_ != &::google::protobuf::internal::kEmptyString) {
    delete selfparam_;
  }
  if (selfparam) {
    set_has_selfparam();
    selfparam_ = selfparam;
  } else {
    clear_has_selfparam();
    selfparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tms

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tms::OnlineState>() {
  return ::tms::OnlineState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tms::TargetType>() {
  return ::tms::TargetType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tms::cmd>() {
  return ::tms::cmd_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_base_2eproto__INCLUDED
